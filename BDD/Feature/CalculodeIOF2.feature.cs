// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BDD.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CalculoDeIOFImpostoSobreOperacoesFinanceirasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CalculodeIOF.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cálculo de IOF (Imposto sobre Operações Financeiras)", "\tPara conhecer como calcula o valor de IOF de um determinado titulo\r\n\tComo atravé" +
                    "s de operação matemática\r\n\tEu quero informar a \r\n\t\tData de Proposta, \r\n\t\tData de" +
                    " Vencimento, \r\n\t\ttaxa de IOF, \r\n\t\tvalor de Compra do titulo e o percentual de IO" +
                    "F aplicado e com isso saber o valor de IOF calculado\r\n\r\n\tNARRATIVA\r\n\tO calculo d" +
                    "everá ser dividido em três partes\t\r\n\t\r\n\tPRIMEIRA PARTE - Utilizaremos Data da Pr" +
                    "oposta, Vencimento, Taxa e Valor do titulo\r\n\t\t1 - Passo: Devemos subtrair a data" +
                    " da Proposta menos a data de Vencimento, onde encontraremos o prazo em dias.\r\n\t\t" +
                    "2 - Passo: Entao deveremos dividir a Taxa de IOF por 365 dias e chegaremos a Tax" +
                    "a do dia, este resultado deverá ser arrendondado em 4 casas decimais.\r\n\t\t3 - Pas" +
                    "so: Multiplicamos Taxa do Dia encontrada x o Prazo em dias, dai que teremos a Ta" +
                    "xa no Periodo.\r\n\t\t4 - Passo: Multiplicamos a Taxa no Periodo pelo valor de Compr" +
                    "a do Título e dividi-se por 100.\r\n\tEntão teremos o primeiro valor do IOF, este r" +
                    "esultado deverá ser arrendondado em 2 casas decimais e resultará no valor de R$ " +
                    "0.42\t\r\n\t\r\n\tSEGUNDA PARTE - Utilizaremos o percentual de IOF informado e o primei" +
                    "ro Valor Calculado\r\n\t\tMultiplicar o valor de Compra do Título pelo percentual de" +
                    " IOF\r\n\tEntão teremos a segunda parte do Calculo deverá resultar no valor de R$ 1" +
                    ".342084\r\n\t\r\n\tTERCEIRA PARTE - Somar valores encontrados (Valod IOF)\r\n\t\tCalculado" +
                    " as partes acima deveremos soma-las (primeira + segunda) onde teremos o valor R$" +
                    " 1.762084\r\n\r\n\tFORA DE ESCOPO\t\r\n\tAplicar boas praticas (SOLID,TDD e outros)\r\n\tExi" +
                    "bir o valor calculado titulo a titulo sempre\r\n\tDado uma operação com mais de um " +
                    "titulo exibir a soma de todos os valores de IOF calculado\r\n\tValidação de entada " +
                    "\r\n\t\t- taxa igual a zero ou negativa\r\n\t\t- data de operação não pode ser menor que" +
                    " a data atual (data corrente)\r\n\t\t- valor de compra do titulo não pode ser negati" +
                    "vo ou igual a zero", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Cálculo de IOF (Imposto sobre Operações Financeiras)")))
            {
                BDD.Feature.CalculoDeIOFImpostoSobreOperacoesFinanceirasFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Calcular IOF do titulo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo de IOF (Imposto sobre Operações Financeiras)")]
        public virtual void CalcularIOFDoTitulo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calcular IOF do titulo", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("que estou em uma tela de operação de titulos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 38
 testRunner.And("a data da Proposta 31-10-2012", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 39
 testRunner.And("a data de Vencimento 29-11-2012", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 40
 testRunner.And("a Taxa de IOF de 1,50%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 41
 testRunner.And("o percentual de IOF informado é de 0,38%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 42
 testRunner.And("o valor de Compra do Titulo de R$ 353,18", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 43
 testRunner.When("for solicitado o valor do IOF do titulo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 44
 testRunner.Then("teremos o valor de IOF do titulo de R$ R$ 1,76", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
